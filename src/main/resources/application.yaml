spring:
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  mvc:
    throw-exception-if-no-handler-found: true
  application:
    name: talk-center
  data:
    mongodb:
      #      database: c-talk
      #      host: 192.168.63.187
      #      port: 27017
      #      username: root
      #      password: admin123456!!!
      # 根据注解自动创建索引
      auto-index-creation: true
      uri: mongodb://root:admin123456!!!@192.168.63.187:27017/c-talk?minPoolSize=5&maxPoolSize=30

  rabbitmq:
    host: 192.168.63.187
    port: 5672
    username: user
    password: password
    virtual-host: /
  redis:
    host: 192.168.63.187
    port: 6379
    connect-timeout: 10s
    timeout: 10s
    lettuce:
      pool:
        max-active: 50

server:
  port: 1002
  servlet:
    encoding:
      force: true
      charset: utf-8

# snowflake id生成
snowflake:
  data-center: 1
  worker: 1

# websocket服务器配置
ws:
  server:
    port: 1003
    host: 0.0.0.0

#minio 配置
minio:
  endpoint: http://192.168.63.187:9000
  bucket-name: pic
  access-key: minioadmin
  secret-key: minioadmin

sa-token:
  token-prefix: Bearer
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: false
  is-read-cookie: false
  is-read-header: true

logging:
  level:
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
